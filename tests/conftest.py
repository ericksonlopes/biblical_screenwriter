"""
Fixtures para os testes do projeto.
"""
import tempfile
from pathlib import Path

import pytest

from src.models import RoteiroBiblico, DetailVideoYouTube, TipoRoteiro


@pytest.fixture
def sample_roteiro():
    """Fixture que retorna um RoteiroBiblico de exemplo."""
    return RoteiroBiblico(
        tema="Ansiedade",
        roteiro="Este √© um roteiro de teste sobre ansiedade. Vamos ler Filipenses 4:6-7...",
        versiculos_utilizados=["Filipenses 4:6-7", "Mateus 6:25-34"],
        duracao_estimada="3-6 minutos",
        tipo=TipoRoteiro.LONGO,
        referencias=["Salmo 23", "Isa√≠as 41:10"],
        postagem_comunidade="üôè Acabei de publicar um v√≠deo sobre ansiedade! Como voc√™ lida com momentos de preocupa√ß√£o? Compartilhe suas estrat√©gias nos coment√°rios! ‚ú®"
    )


@pytest.fixture
def sample_short_roteiro():
    """Fixture que retorna um RoteiroBiblico curto de exemplo."""
    return RoteiroBiblico(
        tema="Gratid√£o",
        roteiro="Roteiro curto sobre gratid√£o. 1 Tessalonicenses 5:18...",
        versiculos_utilizados=["1 Tessalonicenses 5:18"],
        duracao_estimada="‚â§60 segundos",
        tipo=TipoRoteiro.SHORT,
        postagem_comunidade="üôè Short sobre gratid√£o! Pelo que voc√™ √© grato hoje? Deixe nos coment√°rios! ‚ú®"
    )


@pytest.fixture
def sample_detail_video():
    """Fixture que retorna um DetailVideoYouTube de exemplo."""
    return DetailVideoYouTube(
        titulo="Como Vencer a Ansiedade - Reflex√£o B√≠blica",
        descricao="Descri√ß√£o completa do v√≠deo sobre ansiedade e f√©...",
        tags=["ansiedade", "b√≠blia", "reflex√£o", "cristianismo", "f√©"],
        hashtags=["#ansiedade", "#b√≠blia", "#reflex√£o", "#cristianismo"],
        thumbnail_prompt="Uma pessoa em ora√ß√£o com luz dourada ao fundo"
    )


@pytest.fixture
def temp_db_path():
    """Fixture que retorna um caminho tempor√°rio para banco de dados."""
    with tempfile.NamedTemporaryFile(suffix='.sqlite3', delete=False) as f:
        db_path = f.name

    yield db_path

    # Limpeza: remove o arquivo tempor√°rio
    try:
        Path(db_path).unlink()
    except FileNotFoundError:
        pass


@pytest.fixture
def temp_json_dir():
    """Fixture que retorna um diret√≥rio tempor√°rio para arquivos JSON."""
    temp_dir = Path(tempfile.mkdtemp())

    yield temp_dir

    # Limpeza: remove o diret√≥rio tempor√°rio
    import shutil
    try:
        shutil.rmtree(temp_dir)
    except FileNotFoundError:
        pass
